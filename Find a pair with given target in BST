/*
struct Node {
    int data;
    Node *left;
    Node *right;
    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/
bool findpairUtil(Node* root, int sum,  unordered_set<int> &set) { 
    if (root == NULL) 
        return false; 
    if (findpairUtil(root->left, sum, set)) 
        return true; 
    if (set.find(sum - root->data) != set.end()) 
        return true; 
    else
        set.insert(root->data); 
  
    return findpairUtil(root->right, sum, set); 
} 
int isPairPresent(struct Node *root, int target)
{
    unordered_set<int> set; 
    return findpairUtil(root, target, set);
}
